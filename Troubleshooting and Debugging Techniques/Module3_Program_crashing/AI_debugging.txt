AI infused debugging and paired programming
Have you ever been in a situation where you have been completing something or writing up some code and just need a second set of eyes to review it for you? Maybe it’s to find an error in your code that you simply overlooked. Maybe it’s to smooth out confusion in an email or other written documentation. Having someone else—or something else—look over your work can help make it better and be easier to understand.

In this reading, you will learn more about paired programming and debugging, AI paired programming, and AI infused debugging.

AI paired programming and infused debugging
In recent months, artificial intelligence (AI) has been acting as the second programmer. Instead of a human programmer pairing with another human programmer, the human programmer pairs with an AI tool acting as the second programmer or copilot.

Note: AI tools are in the very early days of assisting in writing and debugging code. These AI tools are rapidly developing.

You can use AI tools like Google Gemini, Github Copilot, ChatGPT, Code Llama, or others on the market (and there will be others) to help you write code to perform specific functions and to debug your code. You can ask questions like “Write a Python function for me to calculate the Fibonacci sequence without recursion,” and the AI tool will provide you with an answer in seconds. Similarly, you can copy and paste a piece of code into an AI tool and ask, “What’s wrong with this code?”, and it will pinpoint the error or bug for you in a matter of seconds. 

Pro tip: Use AI tools with caution as they can provide answers that sound correct but are completely wrong or made up. 

Each AI tool works differently, is in the early stages of development, and is maturing quickly. AI features will soon include performance monitoring assistance. You will also be able to ask questions such as “Why is this code slow?”, and AI will provide you with helpful answers.

Paired programming
Paired programming is a technique where two software developers work together to write and check code. One programmer acts as the pilot and writes the code. The other programmer acts as the copilot and goes back through after the pilot writes the code to check for accuracy and errors while making suggestions to strengthen the code. 

Paired debugging
Although paired programming can feel uncomfortable at times, paired debugging is beneficial, especially when you cannot pinpoint the error in your code. Paired debugging is another technique used where two software developers work together. This time, they are not sharing the workload on writing the code but specifically checking one’s work for the needle in the haystack. One programmer will already have some code written. The programmer who wrote the code will explain to the programmer who is helping them what the code should do and how it should perform. Together, the programmers will start the debugging process and go step-by-step through the code until it fails. At that point, the programmers will work together to identify the issue and correct it. The second programmer is there to act as a second set of eyes to help find the bug. 

Key takeaways
AI tools are becoming more popular among software developers as a way to quickly write pieces of code, pinpoint bugs or errors, and troubleshoot why a program is slow or unresponsive. These tools are still developing and will continue to develop over time. Use these tools with caution as they can provide answers that sound correct but are completely wrong. 

