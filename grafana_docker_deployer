pipeline {
    agent {label params.AGENT_LABEL} //Define the agent to run the pipeline

    parameters {
        choice(name: 'AGENT_LABEL', choices:['local', 'agent1', 'agent2', 'agent3', 'agent4'], description: 'Agent to run the pipeline') //Define the parameter array to choose the agent from
        string(name: 'REPO_URL', defaultValue: 'github.com/jcardogo/grafana-prometheus.git', description: 'Git repository URL')
        string(name: 'BRANCH', defaultValue: 'master', description: 'Branch to checkout')
    }

    stages {
        stage('Wipe Workspace') {
            steps {
                echo '***** Starting wipe up working directory *****'
                deleteDir()
                echo '-------wipe up done-------'
            }
        }

        stage('Create Directory'){
            steps {
                script {
                    echo '***** Creating directory *****'
                    sh 'mkdir -p website_content'
                    echo '-------directory created-------'
                }
            }
        }

        stage('Checkout website content'){
            steps {
                echo '***** Checking out website content *****'
                dir ('website_content'){
                    withCredentials([usernamePassword(credentialsId: 'Github_PAT', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_PWD')]) {
                    git url: "https://${GITHUB_USER}:${GITHUB_PWD}@${params.REPO_URL}"
                    }
                }
                echo '-------checkout done-------'
            }
        }

        stage('Dockerize Prometheus'){
            steps {
                echo '***** Dockerizing Prometheus *****'
                script {
                    sh 'docker-compose -f prometheus/docker-compose.yml up -d'
                }
                echo '-------Dockerizing done-------'  
            }   
        }

        stage('Dockerize Grafana'){
            steps {
                echo '***** Dockerizing Grafana *****'
                script {
                    sh 'docker-compose -f grafana/docker-compose.yml up -d'
                }
                echo '-------Dockerizing done-------'  
            }   
        }

        stage('Wait 10 minutes again') {
            steps {
                echo '***** Waiting 10 minutes start*****'
                script {
                    sleep time: 10, unit: 'MINUTES'
                }
                echo '-------Waiting 10 minutes done-------'
            }
        }

        stage('Stop and remove Docker containers') {
            steps {
                echo '***** Stopping and removing Docker containers *****'
                script {
                    sh 'docker stop $(docker ps -a -q)'
                    sh 'docker rm $(docker ps -a -q)'
                    sh 'docker image ls -q | xargs -r docker rmi | true'
                }
                echo '-------Docker containers stopped and removed-------'
            }
        }

    }
}