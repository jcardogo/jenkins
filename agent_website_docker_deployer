pipeline {
    // This pipeline deploys a website using local Docker and Nginx for 5 minutes and then stop removes the Docker containers.
    agent {label params.AGENT_LABEL} //Define the agent to run the pipeline

    parameters {
        choice(name: 'AGENT_LABEL', choices:['local', 'agent1', 'agent2', 'agent3', 'agent4'], description: 'Agent to run the pipeline') //Define the parameter array to choose the agent from
        choice(name: 'BRANCH' , choices:['dockerhub', 'master'], description: 'Branch to run the pipeline from') //Define the parameter array to choose the branch from
        string(name: 'REPO_URL', defaultValue: 'github.com/jcardogo/AlejandroCardoso_website.git', description: 'Git repository URL') //Define the parameter to input the repository URL
    }

    stages {
        stage('Wipe Workspace') {
            steps {
                echo '***** Starting wipe up working directory *****'
                deleteDir() // This will delete the workspace directory
                echo '-------wipe up done-------'
            }
        }

        stage('Create Directory'){
            steps {
                script {
                    echo '***** Creating directory *****'
                    sh 'mkdir -p website_content' // Create a directory to store the website content
                    echo '-------directory created-------'
                }
            }
        }

        stage('Checkout website content'){
            steps {
                echo '***** Checking out website content *****'
                // Checkout the website content from the specified repository
                dir ('website_content'){
                    withCredentials([usernamePassword(credentialsId: 'Github_PAT', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_PWD')]) {
                        git url: "https://${params.REPO_URL}", credentialsId: 'Github_PAT'
                    }
                }
                echo '-------checkout done-------'
            }
        }

        stage('Dockerize Nginx'){
            steps {
                echo '***** Dockerizing website on Nginx *****'
                // Create a Dockerfile and build the Docker image
                script {
                    sh '''
                        echo "FROM nginx:alpine" > Dockerfile
                        echo "COPY website_content/ /usr/share/nginx/html/" >> Dockerfile 
                        docker build -t my-nginx-image -f Dockerfile .
                        docker run -d -p 8086:80 --name my-nginx-container my-nginx-image
                    '''
                }
                echo '-------Dockerizing done-------'  
            }   
        }

        stage('Wait 5 minutes again') {
            steps {
                echo '***** Waiting 5 minutes start*****'
                script {
                    sleep time: 5, unit: 'MINUTES'
                }
                echo '-------Waiting 5 minutes done-------'
            }
        }

        stage('Stop and remove Docker containers') {
            steps {
                echo '***** Stopping and removing Docker containers *****'
                script {
                    sh 'docker stop $(docker ps -a -q)'
                    sh 'docker rm $(docker ps -a -q)'
                    sh 'docker image ls -q | xargs -r docker rmi | true'
                }
                echo '-------Docker containers stopped and removed-------'
            }
        }

    }
}